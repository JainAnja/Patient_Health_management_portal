/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.project.ui.insurance;

import com.project.ecosystem.Ecosystem;
import com.project.enterprise.Enterprise;
import com.project.organization.Organization;
import com.project.patient.PatientProfile;
import com.project.prescription.Prescription;
import com.project.useraccount.UserAccount;
import com.project.workqueue.InsuranceClaimWorkRequest;
import com.project.workqueue.PatientTreatmentWorkRequest;
import com.project.workqueue.PrescriptionWorkRequest;
import com.project.workqueue.WorkRequest;
import javax.swing.JOptionPane;
import java.util.Date;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import com.project.utils.Validation;
import com.project.constants.WorkRequestStatus;
import com.project.utils.SendEmail;

/**
 *
 * @author bhavinbhatia
 */
public class InsuranceClaimsManagerWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form InsuranceClaimsManagerWorkAreaJPanel
     */
    private Organization organization;
    private Enterprise insuranceEnterprise;
    private Ecosystem ecosystem;
    private UserAccount account;
    private PatientProfile selectedPatient;
    private PrescriptionWorkRequest selectedPWR;
    private InsuranceClaimWorkRequest selectedICWR;

    public InsuranceClaimsManagerWorkAreaJPanel(JPanel containerPanel, UserAccount account,
            Organization organization, Enterprise enterprise, Ecosystem ecosystem) {
        initComponents();
        this.organization = organization;
        this.insuranceEnterprise = enterprise;
        this.ecosystem = ecosystem;
        populateInsuranceWorkQueue(account, ecosystem);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblpolicyNumber = new javax.swing.JLabel();
        txtPolicyNumber = new javax.swing.JTextField();
        viewAllButton = new javax.swing.JButton();
        lbldate = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        lblamount = new javax.swing.JLabel();
        txtHospitalAmount = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        updateDeny = new javax.swing.JButton();
        lblnic = new javax.swing.JLabel();
        txtCusName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInsuranceWorkQueue = new javax.swing.JTable();
        btnAccept = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaNotes = new javax.swing.JTextArea();
        lblamount1 = new javax.swing.JLabel();
        txtPharmacyAmount = new javax.swing.JTextField();
        lblamount2 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        lblamount3 = new javax.swing.JLabel();
        txtSearchInput = new javax.swing.JTextField();

        setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(174, 14, 54), 5), "Manage Claims", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 18), new java.awt.Color(174, 14, 54))); // NOI18N
        setPreferredSize(new java.awt.Dimension(1100, 800));

        lblpolicyNumber.setForeground(new java.awt.Color(174, 14, 54));
        lblpolicyNumber.setText("Insurance Number");

        txtPolicyNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPolicyNumberActionPerformed(evt);
            }
        });

        viewAllButton.setBackground(new java.awt.Color(174, 14, 54));
        viewAllButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        viewAllButton.setForeground(new java.awt.Color(255, 255, 255));
        viewAllButton.setText("Select");
        viewAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAllButtonActionPerformed(evt);
            }
        });

        lbldate.setForeground(new java.awt.Color(174, 14, 54));
        lbldate.setText("Date ");

        lblamount.setForeground(new java.awt.Color(174, 14, 54));
        lblamount.setText("Notes");

        searchButton.setBackground(new java.awt.Color(174, 14, 54));
        searchButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        searchButton.setForeground(new java.awt.Color(255, 255, 255));
        searchButton.setText("SEARCH BY PATIENT");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        updateDeny.setBackground(new java.awt.Color(174, 14, 54));
        updateDeny.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        updateDeny.setForeground(new java.awt.Color(255, 255, 255));
        updateDeny.setText("DENY");
        updateDeny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDenyActionPerformed(evt);
            }
        });

        lblnic.setForeground(new java.awt.Color(174, 14, 54));
        lblnic.setText("Customer Name: ");

        txtCusName.setEditable(false);
        txtCusName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCusNameActionPerformed(evt);
            }
        });

        tblInsuranceWorkQueue.setBackground(new java.awt.Color(252, 246, 245));
        tblInsuranceWorkQueue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Request Date:", "Insurance Number", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblInsuranceWorkQueue);

        btnAccept.setBackground(new java.awt.Color(174, 14, 54));
        btnAccept.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnAccept.setForeground(new java.awt.Color(255, 255, 255));
        btnAccept.setText("ACCEPT");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        txtAreaNotes.setColumns(20);
        txtAreaNotes.setRows(5);
        jScrollPane2.setViewportView(txtAreaNotes);

        lblamount1.setForeground(new java.awt.Color(174, 14, 54));
        lblamount1.setText("Hospital Amount");

        lblamount2.setForeground(new java.awt.Color(174, 14, 54));
        lblamount2.setText("Pharmacy Amount");

        lblamount3.setForeground(new java.awt.Color(174, 14, 54));
        lblamount3.setText("Insurance amount");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(viewAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAccept, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblpolicyNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblamount1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblamount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(updateDeny, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPolicyNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtHospitalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(97, 97, 97)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblamount2)
                                    .addComponent(txtPharmacyAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblamount3)))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSearchInput, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbldate, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblnic))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCusName, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(298, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lbldate, lblnic});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtSearchInput, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(viewAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblnic)
                    .addComponent(txtCusName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbldate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblpolicyNumber)
                    .addComponent(txtPolicyNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblamount2)
                    .addComponent(lblamount3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtHospitalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblamount1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPharmacyAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblamount))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAccept)
                    .addComponent(updateDeny))
                .addContainerGap(270, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblamount, lblamount1, lbldate, lblnic, lblpolicyNumber});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAccept, updateDeny, viewAllButton});

    }// </editor-fold>//GEN-END:initComponents
public void populateInsuranceWorkQueue(UserAccount userAccount, Ecosystem ecosystem) {
        DefaultTableModel model = (DefaultTableModel) tblInsuranceWorkQueue.getModel();
        model.setRowCount(0);
        for (WorkRequest workRequest : organization.getWorkQueue().getWorkrequest()) {
            if (workRequest instanceof PrescriptionWorkRequest) {
                PrescriptionWorkRequest prescriptionWorkRequest = (PrescriptionWorkRequest) workRequest;
                Object[] row = new Object[5];
                row[0] = prescriptionWorkRequest;
                row[1] = prescriptionWorkRequest.getRequestDate();
                row[2] = prescriptionWorkRequest.getPatient().getInsuranceNumber();
                row[3] = workRequest.getStatus();
                model.addRow(row);
            }

            if (workRequest instanceof InsuranceClaimWorkRequest) {
                InsuranceClaimWorkRequest icwr = (InsuranceClaimWorkRequest) workRequest;
                Object[] row = new Object[5];
                row[0] = icwr;
                row[1] = icwr.getRequestDate();
                row[2] = icwr.getPatient().getInsuranceNumber();
                row[3] = workRequest.getStatus();
                model.addRow(row);
            }

        }
    }
    private void viewAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAllButtonActionPerformed
        int selectedRowIndex = tblInsuranceWorkQueue.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this,
                    "Please select the request first", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            DefaultTableModel tableModel = (DefaultTableModel) tblInsuranceWorkQueue.getModel();

            WorkRequest workRequest = (WorkRequest) tableModel.getValueAt(selectedRowIndex, 0);
            if (workRequest instanceof PrescriptionWorkRequest) {
                selectedPWR = (PrescriptionWorkRequest) workRequest;
                selectedPatient = selectedPWR.getPatient();
                txtCusName.setText(selectedPWR.getPatient().getPatientName());
                txtPolicyNumber.setText(selectedPWR.getPatient().getInsuranceNumber());
                txtHospitalAmount.setText(String.valueOf(selectedPWR.getEncounter().getHospitalAmount()));
                txtPharmacyAmount.setText(String.valueOf(selectedPWR.getEncounter().getPharmacyAmount()));
                txtDate.setText(selectedPWR.getRequestDate().toString());
            }

            if (workRequest instanceof InsuranceClaimWorkRequest) {
                selectedICWR = (InsuranceClaimWorkRequest) workRequest;
                selectedPatient = selectedICWR.getPatient();
                txtCusName.setText(selectedICWR.getPatient().getPatientName());
                txtPolicyNumber.setText(selectedICWR.getPatient().getInsuranceNumber());
                txtHospitalAmount.setText(String.valueOf(selectedICWR.getEncounter().getHospitalAmount()));
                txtPharmacyAmount.setText("0");
                txtDate.setText(selectedICWR.getRequestDate().toString());
            }

        }
    }//GEN-LAST:event_viewAllButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
       DefaultTableModel model = (DefaultTableModel) tblInsuranceWorkQueue.getModel();
        model.setRowCount(0);
        for (WorkRequest workRequest : organization.getWorkQueue().getWorkrequest()) {
            if (workRequest instanceof PrescriptionWorkRequest) {
                PrescriptionWorkRequest prescriptionWorkRequest = (PrescriptionWorkRequest) workRequest;
                if (prescriptionWorkRequest.getPatient().getfName().equalsIgnoreCase(txtSearchInput.getText()) || prescriptionWorkRequest.getPatient().getlName().equalsIgnoreCase(txtSearchInput.getText())) {
                    Object[] row = new Object[5];
                    row[0] = prescriptionWorkRequest;
                    row[1] = prescriptionWorkRequest.getRequestDate();
                    row[2] = prescriptionWorkRequest.getPatient().getInsuranceNumber();
                    row[3] = workRequest.getStatus();
                    model.addRow(row);
                }
            }

            if (workRequest instanceof InsuranceClaimWorkRequest) {
                InsuranceClaimWorkRequest icwr = (InsuranceClaimWorkRequest) workRequest;
                if (icwr.getPatient().getfName().equalsIgnoreCase(txtSearchInput.getText()) || icwr.getPatient().getlName().equalsIgnoreCase(txtSearchInput.getText())) {
                    Object[] row = new Object[5];
                    row[0] = icwr;
                    row[1] = icwr.getRequestDate();
                    row[2] = icwr.getPatient().getInsuranceNumber();
                    row[3] = workRequest.getStatus();
                    model.addRow(row);
                }
            }
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void updateDenyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDenyActionPerformed
        if (!Validation.validateTextFieldsForAmount(txtAmount)) {
            JOptionPane.showMessageDialog(this, "Amount is invalid", "FORM ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (selectedPWR != null) {
            selectedPWR.getEncounter().setInsuranceAmount(Double.parseDouble(txtAmount.getText()));
            selectedPWR.setResolveDate(new Date());
            selectedPWR.setStatus(WorkRequestStatus.Status.DENIED.getValue());
            selectedPWR.setReceiver(account);
            selectedPWR.setMessage(txtAreaNotes.getText());
            selectedPWR.getEncounter().setNotes(txtAreaNotes.getText());
            selectedPWR.getEncounter().setInsuranceAmount(Double.parseDouble(txtAmount.getText()));
            double amountToBePaid = selectedPWR.getEncounter().getHospitalAmount() + selectedPWR.getEncounter().getPharmacyAmount() - selectedPWR.getEncounter().getInsuranceAmount();
            selectedPWR.getEncounter().setPayment(amountToBePaid);
            JOptionPane.showMessageDialog(this, "Request is denied. Please check notes for more comments", "FORM DENIED", JOptionPane.WARNING_MESSAGE);
        } else if (selectedICWR != null) {
            selectedICWR.getEncounter().setInsuranceAmount(Double.parseDouble(txtAmount.getText()));
            selectedICWR.setResolveDate(new Date());
            selectedICWR.setReceiver(account);
            selectedICWR.setStatus(WorkRequestStatus.Status.APPROVED.getValue());
            selectedICWR.setMessage(txtAreaNotes.getText());
            selectedICWR.getEncounter().setNotes(txtAreaNotes.getText());
            double amountToBePaid = selectedPWR.getEncounter().getHospitalAmount() + selectedPWR.getEncounter().getPharmacyAmount() - selectedPWR.getEncounter().getInsuranceAmount();
            selectedPWR.getEncounter().setPayment(amountToBePaid);
            JOptionPane.showMessageDialog(this, "Request is approved. Please check notes for more comments", "FORM APPROVED", JOptionPane.INFORMATION_MESSAGE);
        }

        populateInsuranceWorkQueue(account, ecosystem);
        SendEmail sendEmail = new SendEmail(selectedPatient.getEmailId(), "Rejected", 
                "Your Request has has been Denied");
    }//GEN-LAST:event_updateDenyActionPerformed

    private void txtCusNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCusNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCusNameActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
        if (!Validation.validateTextFieldsForAmount(txtAmount)) {
            JOptionPane.showMessageDialog(this, "Amount is invalid", "FORM ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (selectedPWR != null) {
            selectedPWR.getEncounter().setInsuranceAmount(Double.parseDouble(txtAmount.getText()));
            selectedPWR.setResolveDate(new Date());
            selectedPWR.setReceiver(account);
            selectedPWR.setStatus(WorkRequestStatus.Status.APPROVED.getValue());
            selectedPWR.setMessage(txtAreaNotes.getText());
            selectedPWR.getEncounter().setNotes(txtAreaNotes.getText());
            selectedPWR.getEncounter().setInsuranceAmount(Double.parseDouble(txtAmount.getText()));
            double amountToBePaid = selectedPWR.getEncounter().getPharmacyAmount() - selectedPWR.getEncounter().getInsuranceAmount();
            selectedPWR.getEncounter().setPayment(amountToBePaid);
            JOptionPane.showMessageDialog(this, "Request is approved. Please check notes for more comments", "FORM APPROVED", JOptionPane.INFORMATION_MESSAGE);
        } else if (selectedICWR != null) {
            selectedICWR.getEncounter().setInsuranceAmount(Double.parseDouble(txtAmount.getText()));
            selectedICWR.setResolveDate(new Date());
            selectedICWR.setReceiver(account);
            selectedICWR.setStatus(WorkRequestStatus.Status.APPROVED.getValue());
            selectedICWR.setMessage(txtAreaNotes.getText());
            selectedICWR.getEncounter().setNotes(txtAreaNotes.getText());
            double amountToBePaid = selectedICWR.getEncounter().getHospitalAmount() - selectedICWR.getEncounter().getInsuranceAmount();
            selectedICWR.getEncounter().setPayment(amountToBePaid);
            JOptionPane.showMessageDialog(this, "Request is approved. Please check notes for more comments", "FORM APPROVED", JOptionPane.INFORMATION_MESSAGE);
        }

        populateInsuranceWorkQueue(account, ecosystem);
        SendEmail sendEmail = new SendEmail(selectedPatient.getEmailId(), "Approved", 
                "Your Request has has been Approved");
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void txtPolicyNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPolicyNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPolicyNumberActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblamount;
    private javax.swing.JLabel lblamount1;
    private javax.swing.JLabel lblamount2;
    private javax.swing.JLabel lblamount3;
    private javax.swing.JLabel lbldate;
    private javax.swing.JLabel lblnic;
    private javax.swing.JLabel lblpolicyNumber;
    private javax.swing.JButton searchButton;
    private javax.swing.JTable tblInsuranceWorkQueue;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextArea txtAreaNotes;
    public static javax.swing.JTextField txtCusName;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtHospitalAmount;
    private javax.swing.JTextField txtPharmacyAmount;
    private javax.swing.JTextField txtPolicyNumber;
    private javax.swing.JTextField txtSearchInput;
    private javax.swing.JButton updateDeny;
    private javax.swing.JButton viewAllButton;
    // End of variables declaration//GEN-END:variables
}
