/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.project.ui.hospital;

import com.project.constants.WorkRequestStatus;
import com.project.enterprise.Enterprise;
import com.project.organization.Organization;
import com.project.patient.Encounter;
import com.project.patient.PatientProfile;
import com.project.patient.VitalSigns;
import com.project.useraccount.UserAccount;
import com.project.utils.Utils;
import com.project.utils.Validation;
import com.project.workqueue.NurseProcessingWorkRequest;
import com.project.workqueue.PatientTreatmentWorkRequest;
import com.project.workqueue.WorkRequest;
import java.time.LocalDate;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bhavinbhatia
 */
public class NurseWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form NursePanel
     */
    private JPanel containerPanel;
    private UserAccount account;
    private Enterprise enterprise;
    private PatientProfile patient;
    private NurseProcessingWorkRequest nurseProcessingWorkRequest;

    public NurseWorkAreaJPanel(JPanel containerPanel, UserAccount account, Enterprise enterprise) {
        initComponents();
        this.containerPanel = containerPanel;
        this.account = account;
        this.enterprise = enterprise;
        hideVSFields();
        populateNurseWorkQueue();
    }

    public void hideVSFields() {
        txtPatientId.setVisible(false);
        txtAlergies.setVisible(false);
        txtBloodPressure.setVisible(false);
        txtSymptoms.setVisible(false);
        txtTemp.setVisible(false);
        txtpulse.setVisible(false);

        lblPatientId.setVisible(false);
        lblAlergies.setVisible(false);
        lblBloodPressure.setVisible(false);
        lblPulseRate.setVisible(false);
        lblTemperature.setVisible(false);
        lblSymptoms.setVisible(false);

        btnAddVitals.setVisible(false);
    }

    public void showVSFields() {
        txtPatientId.setVisible(true);
        txtAlergies.setVisible(true);
        txtBloodPressure.setVisible(true);
        txtSymptoms.setVisible(true);
        txtTemp.setVisible(true);
        txtpulse.setVisible(true);

        lblPatientId.setVisible(true);
        lblAlergies.setVisible(true);
        lblBloodPressure.setVisible(true);
        lblPulseRate.setVisible(true);
        lblTemperature.setVisible(true);
        lblSymptoms.setVisible(true);

        btnAddVitals.setVisible(true);
    }

    public void clearFields() {
        txtPatientId.setText("");
        txtpulse.setText("");
        txtBloodPressure.setText("");
        txtAlergies.setText("");
        txtTemp.setText("");
        txtSymptoms.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPatientId = new javax.swing.JTextField();
        txtpulse = new javax.swing.JTextField();
        txtTemp = new javax.swing.JTextField();
        txtBloodPressure = new javax.swing.JTextField();
        txtSymptoms = new javax.swing.JTextField();
        txtAlergies = new javax.swing.JTextField();
        lblAlergies = new javax.swing.JLabel();
        lblPulseRate = new javax.swing.JLabel();
        lblTemperature = new javax.swing.JLabel();
        lblBloodPressure = new javax.swing.JLabel();
        lblSymptoms = new javax.swing.JLabel();
        lblPatientId = new javax.swing.JLabel();
        btnAssessPatient = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNurseWorkQueue = new javax.swing.JTable();
        btnAddVitals = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(174, 14, 54), 5), "Add Vital Signs", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 18), new java.awt.Color(174, 14, 54))); // NOI18N
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(txtPatientId, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 220, 244, 40));
        add(txtpulse, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 276, 244, 30));

        txtTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTempActionPerformed(evt);
            }
        });
        add(txtTemp, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 320, 244, 30));
        add(txtBloodPressure, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 366, 244, 30));

        txtSymptoms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSymptomsActionPerformed(evt);
            }
        });
        add(txtSymptoms, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 406, 244, 30));
        add(txtAlergies, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 456, 244, 30));

        lblAlergies.setText("Allergies:");
        add(lblAlergies, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 460, -1, -1));

        lblPulseRate.setText("Pulse Rate:");
        add(lblPulseRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, -1, -1));

        lblTemperature.setText("Temperature:");
        add(lblTemperature, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, -1, -1));

        lblBloodPressure.setText("Blood Pressure:");
        add(lblBloodPressure, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 370, -1, -1));

        lblSymptoms.setText("Symptoms:");
        add(lblSymptoms, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 410, -1, -1));

        lblPatientId.setText("Patient ID");
        add(lblPatientId, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 230, -1, -1));

        btnAssessPatient.setBackground(new java.awt.Color(174, 14, 54));
        btnAssessPatient.setForeground(new java.awt.Color(255, 255, 255));
        btnAssessPatient.setText("Assess Patient");
        btnAssessPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssessPatientActionPerformed(evt);
            }
        });
        add(btnAssessPatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 190, 194, 37));

        tblNurseWorkQueue.setBackground(new java.awt.Color(241, 244, 255));
        tblNurseWorkQueue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient", "Receptionist", "Patient criticality", "Notes"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblNurseWorkQueue);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, 730, 126));

        btnAddVitals.setBackground(new java.awt.Color(174, 14, 54));
        btnAddVitals.setForeground(new java.awt.Color(255, 255, 255));
        btnAddVitals.setText("Add Vital Sign");
        btnAddVitals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddVitalsActionPerformed(evt);
            }
        });
        add(btnAddVitals, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 500, 240, 37));
    }// </editor-fold>//GEN-END:initComponents

    public void populateNurseWorkQueue() {
        DefaultTableModel model = (DefaultTableModel) tblNurseWorkQueue.getModel();
        model.setRowCount(0);

        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organization.getOrganizationType().equalsIgnoreCase(Organization.Type.NURSE.getValue())) {
                for (WorkRequest workRequest : organization.getWorkQueue().getWorkrequest()) {
                    NurseProcessingWorkRequest npwr = (NurseProcessingWorkRequest) workRequest;
                    Object[] row = new Object[5];
                    row[0] = npwr;
                    row[1] = npwr.getReceptionist();
                    row[2] = npwr.getCriticality();
                    row[3] = npwr.getNotes();
                    row[4] = npwr.getStatus();

                    model.addRow(row);
                }
            }

        }

    }
    private void btnAssessPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssessPatientActionPerformed
        // TODO add your handling code here:

        int selectedRow = tblNurseWorkQueue.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select patient to start assessment", "No selection", JOptionPane.ERROR_MESSAGE);
        } else {
            WorkRequest selectedWR = (WorkRequest) tblNurseWorkQueue.getValueAt(selectedRow, 0);
            NurseProcessingWorkRequest selectedNPWR = (NurseProcessingWorkRequest) selectedWR;

            showVSFields();
            txtPatientId.setText(String.valueOf(selectedNPWR.getPatient().getId()));
            this.nurseProcessingWorkRequest = selectedNPWR;
            this.patient = selectedNPWR.getPatient();

        }

    }//GEN-LAST:event_btnAssessPatientActionPerformed

    private void btnAddVitalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddVitalsActionPerformed
        // TODO add your handling code here:

        boolean errorFlag = false;
        String errorFields = "Please enter correct values for following fields: \n";
        int selectedRow = tblNurseWorkQueue.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select patient to assign to Doctor", "No selection", JOptionPane.ERROR_MESSAGE);
            return;
        }

        
        String patientIdStr = String.valueOf(patient.getId());
        String pulseRateStr = txtpulse.getText();
        if (!Utils.isValidHeartRate(pulseRateStr)) {
            errorFields += "Invalid Heart Rate\n";
            errorFlag = true;
        }
        String tempStr = txtTemp.getText();
        if (!Utils.isValidTem(tempStr)) {
            errorFields += "Invalid Tempreature \n";
            errorFlag = true;
        }
        String bloodPressureStr = txtBloodPressure.getText();
        if (!Utils.isValidBloodpressure(bloodPressureStr)) {
            errorFields += "Invalid Blood Pressure\n";
            errorFlag = true;
        }
        String symptoms = txtSymptoms.getText();

        if (!Utils.isValidText(symptoms)) {
            errorFields += "Invalid symptoms\n";
            errorFlag = true;
        }

        String allergies = txtAlergies.getText();

        if (!Utils.isValidText(allergies)) {
            errorFields += "Invalid allergies\n";
            errorFlag = true;
        }
        
        if(!errorFlag){
            

        int existingPatientId = Integer.parseInt(patientIdStr);
        int pulseRate = Integer.parseInt(pulseRateStr);
        int temp = Integer.parseInt(tempStr);
        int bloodPressure = Integer.parseInt(bloodPressureStr);

        VitalSigns newVitalSigns = new VitalSigns(pulseRate, temp, bloodPressure);
        Encounter encounter = new Encounter(LocalDate.now(), newVitalSigns);
        newVitalSigns.setEncounter(encounter);
        this.patient.getEncounterHistory().addNewEncounter(encounter);
        clearFields();

        nurseProcessingWorkRequest.setReceiver(account);

        nurseProcessingWorkRequest.setStatus(WorkRequestStatus.Status.COMPLETED.getValue());

        PatientTreatmentWorkRequest ptwr = new PatientTreatmentWorkRequest(account, null, symptoms, nurseProcessingWorkRequest.getPatient());
        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (org.getOrganizationType().equalsIgnoreCase(Organization.Type.DOCTOR.getValue())) {
                org.getWorkQueue().getWorkrequest().add(ptwr);
                ptwr.setSymptomps(symptoms);
                ptwr.setAllergies(allergies);
                ptwr.setEncounter(encounter);
                JOptionPane.showMessageDialog(this, "Vital signs updated and request sent to doctor successfully for patient: " + patient.getfName() + " " + patient.getlName(), "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                break;
            }
        }
        }
        else{
            JOptionPane.showMessageDialog(this, "Invalid fields: " + errorFields,
                    "FORM ERROR", JOptionPane.ERROR_MESSAGE);
            
        }
    }//GEN-LAST:event_btnAddVitalsActionPerformed

    private void txtSymptomsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSymptomsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSymptomsActionPerformed

    private void txtTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTempActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTempActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddVitals;
    private javax.swing.JButton btnAssessPatient;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAlergies;
    private javax.swing.JLabel lblBloodPressure;
    private javax.swing.JLabel lblPatientId;
    private javax.swing.JLabel lblPulseRate;
    private javax.swing.JLabel lblSymptoms;
    private javax.swing.JLabel lblTemperature;
    private javax.swing.JTable tblNurseWorkQueue;
    private javax.swing.JTextField txtAlergies;
    private javax.swing.JTextField txtBloodPressure;
    private javax.swing.JTextField txtPatientId;
    private javax.swing.JTextField txtSymptoms;
    private javax.swing.JTextField txtTemp;
    private javax.swing.JTextField txtpulse;
    // End of variables declaration//GEN-END:variables
}
