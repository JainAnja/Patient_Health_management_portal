/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.project.ui.hospital;

import com.project.constants.WorkRequestStatus;
import com.project.ecosystem.Ecosystem;
import com.project.enterprise.Enterprise;
import static com.project.enterprise.Enterprise.EnterpriseType.InsuranceEnterprise;
import static com.project.enterprise.Enterprise.EnterpriseType.PharmacyEnterprise;
import com.project.healthcare.DoctorOrganization;
import com.project.insurance.InsuranceEnterprise;
import com.project.network.Network;
import com.project.organization.Organization;
import com.project.patient.Encounter;
import com.project.patient.PatientProfile;
import com.project.patient.VitalSigns;
import com.project.person.Person;
import com.project.ui.pharmacy.PharmacistWorkAreaPanel;
import com.project.prescription.Prescription;
import com.project.role.PatientRole;
import com.project.ui.pharmacy.PharmacyEnterprise;
import com.project.useraccount.UserAccount;
import com.project.utils.SendEmail;
import com.project.utils.Validation;
import com.project.workqueue.InsuranceClaimWorkRequest;
import com.project.workqueue.PatientTreatmentWorkRequest;
import com.project.workqueue.PrescriptionWorkRequest;
import com.project.workqueue.WorkRequest;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bhavinbhatia
 */
public class DoctorWorkAreaPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorPanel
     *
     * @param containerPanel
     */
    private Organization organization;
    private Enterprise doctorEnterprise;
    private Ecosystem ecosystem;
    private UserAccount account;
    private PatientProfile selectedPatient;
    private Encounter encounter;
    PatientTreatmentWorkRequest selectedPTWR;

    public DoctorWorkAreaPanel(JPanel containerPanel, UserAccount account,
            Organization organization, Enterprise enterprise, Ecosystem ecosystem) {
        initComponents();
        this.organization = organization;
        this.doctorEnterprise = enterprise;
        this.ecosystem = ecosystem;
        this.account = account;
        populateDoctorWorkQueue(account, ecosystem);
        hideFields();
    }

    public void hideFields() {
        txtAreaPres.setVisible(false);
        jBtnSendInsurance.setVisible(false);
        jBtnSendPharmacy.setVisible(false);
    }

    public void showFields() {
        txtAreaPres.setVisible(true);
        jBtnSendInsurance.setVisible(true);
        jBtnSendPharmacy.setVisible(true);
    }

    public void populateDoctorWorkQueue(UserAccount userAccount, Ecosystem ecosystem) {
        DefaultTableModel model = (DefaultTableModel) tblDoctorWorkQueue.getModel();
        model.setRowCount(0);

        for (WorkRequest workRequest : organization.getWorkQueue().getWorkrequest()) {
            PatientTreatmentWorkRequest ptwr = (PatientTreatmentWorkRequest) workRequest;
            Object[] row = new Object[4];
            row[0] = ptwr;
            row[1] = ptwr.getRequestDate();
            row[2] = ptwr.getSymptomps() != null ? ptwr.getSymptomps() : "No symptoms entered";
            row[3] = workRequest.getStatus();

            model.addRow(row);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDoctorWorkQueue = new javax.swing.JTable();
        btnAcceptPatient = new javax.swing.JButton();
        lblPatientId = new javax.swing.JLabel();
        lblPulseRate = new javax.swing.JLabel();
        lblTemperature = new javax.swing.JLabel();
        lblSymptoms = new javax.swing.JLabel();
        txtPatientId = new javax.swing.JTextField();
        txtPulserate = new javax.swing.JTextField();
        txtTemperature = new javax.swing.JTextField();
        txtAreaaddPrescription = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaPres = new javax.swing.JTextArea();
        jBtnSendPharmacy = new javax.swing.JButton();
        jBtnSendInsurance = new javax.swing.JButton();
        btnSendEmail = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtSymptoms = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtMedications = new javax.swing.JTextArea();
        lblSymptoms1 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtAllergies = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        txtBloodPressure = new javax.swing.JTextField();
        lblTemperature1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(174, 14, 54), 5, true), "Welcome Doctor", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18), new java.awt.Color(174, 14, 54))); // NOI18N
        setForeground(new java.awt.Color(174, 14, 54));
        setPreferredSize(new java.awt.Dimension(1100, 800));

        tblDoctorWorkQueue.setBackground(new java.awt.Color(241, 244, 255));
        tblDoctorWorkQueue.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tblDoctorWorkQueue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient ID", "Date", "Symptoms", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDoctorWorkQueue);

        btnAcceptPatient.setBackground(new java.awt.Color(174, 14, 54));
        btnAcceptPatient.setForeground(new java.awt.Color(255, 255, 255));
        btnAcceptPatient.setText("Accept Patient");
        btnAcceptPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptPatientActionPerformed(evt);
            }
        });

        lblPatientId.setForeground(new java.awt.Color(174, 14, 54));
        lblPatientId.setText("Patient ID");

        lblPulseRate.setForeground(new java.awt.Color(174, 14, 54));
        lblPulseRate.setText("Pulse Rate");

        lblTemperature.setForeground(new java.awt.Color(174, 14, 54));
        lblTemperature.setText("Temperature");

        lblSymptoms.setForeground(new java.awt.Color(174, 14, 54));
        lblSymptoms.setText("Symptoms");

        txtPatientId.setEditable(false);
        txtPatientId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientIdActionPerformed(evt);
            }
        });

        txtAreaaddPrescription.setBackground(new java.awt.Color(174, 14, 54));
        txtAreaaddPrescription.setForeground(new java.awt.Color(255, 255, 255));
        txtAreaaddPrescription.setText("Add Prescription");
        txtAreaaddPrescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAreaaddPrescriptionActionPerformed(evt);
            }
        });

        txtAreaPres.setBackground(new java.awt.Color(241, 244, 255));
        txtAreaPres.setColumns(20);
        txtAreaPres.setRows(5);
        jScrollPane2.setViewportView(txtAreaPres);

        jBtnSendPharmacy.setBackground(new java.awt.Color(174, 14, 54));
        jBtnSendPharmacy.setForeground(new java.awt.Color(255, 255, 255));
        jBtnSendPharmacy.setText("Send Request to Pharmacy");
        jBtnSendPharmacy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSendPharmacyActionPerformed(evt);
            }
        });

        jBtnSendInsurance.setBackground(new java.awt.Color(174, 14, 54));
        jBtnSendInsurance.setForeground(new java.awt.Color(255, 255, 255));
        jBtnSendInsurance.setText("Send Request to Insurance");
        jBtnSendInsurance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSendInsuranceActionPerformed(evt);
            }
        });

        btnSendEmail.setBackground(new java.awt.Color(174, 14, 54));
        btnSendEmail.setForeground(new java.awt.Color(255, 255, 255));
        btnSendEmail.setText("Send Email");
        btnSendEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendEmailActionPerformed(evt);
            }
        });

        txtSymptoms.setColumns(20);
        txtSymptoms.setRows(5);
        jScrollPane3.setViewportView(txtSymptoms);

        txtMedications.setColumns(20);
        txtMedications.setRows(5);
        jScrollPane4.setViewportView(txtMedications);

        lblSymptoms1.setForeground(new java.awt.Color(174, 14, 54));
        lblSymptoms1.setText("Allergies");

        txtAllergies.setColumns(20);
        txtAllergies.setRows(5);
        jScrollPane5.setViewportView(txtAllergies);

        jLabel1.setForeground(new java.awt.Color(174, 14, 54));
        jLabel1.setText("Medications");

        lblTemperature1.setForeground(new java.awt.Color(174, 14, 54));
        lblTemperature1.setText("Blood Pressure");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAcceptPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel1)
                                        .addComponent(lblSymptoms))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(lblSymptoms1))
                                    .addComponent(lblPatientId))
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane3)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtAreaaddPrescription, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtPulserate, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblPulseRate))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblTemperature))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblTemperature1)
                                            .addComponent(txtBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jScrollPane4)
                                    .addComponent(txtPatientId)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(27, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBtnSendPharmacy, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                            .addComponent(jBtnSendInsurance, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                            .addComponent(btnSendEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(21, 21, 21))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblPatientId, lblPulseRate, lblSymptoms, lblSymptoms1, lblTemperature});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAcceptPatient, txtAreaaddPrescription});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAcceptPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblPatientId))
                        .addGap(4, 4, 4)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPulseRate)
                            .addComponent(lblTemperature)
                            .addComponent(lblTemperature1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPulserate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSymptoms)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSymptoms1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtAreaaddPrescription, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBtnSendPharmacy, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnSendInsurance, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSendEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtPatientId, txtPulserate, txtTemperature});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblPatientId, lblPulseRate, lblSymptoms, lblSymptoms1, lblTemperature});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jScrollPane3, jScrollPane4, jScrollPane5});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAcceptPatient, btnSendEmail, jBtnSendInsurance, jBtnSendPharmacy, txtAreaaddPrescription});

    }// </editor-fold>//GEN-END:initComponents

    private void btnAcceptPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptPatientActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblDoctorWorkQueue.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this,
                    "Please select the request first", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            DefaultTableModel tableModel = (DefaultTableModel) tblDoctorWorkQueue.getModel();

            PatientTreatmentWorkRequest selectedPTWR
                    = (PatientTreatmentWorkRequest) tableModel.getValueAt(selectedRowIndex, 0);
            
            
            if(selectedPTWR.getStatus().equalsIgnoreCase(WorkRequestStatus.Status.TREATMENT_COMPLETE.getValue())|| 
                    selectedPTWR.getStatus().equalsIgnoreCase(WorkRequestStatus.Status.SENT_TO_INSURANCE.getValue()) ||
                    selectedPTWR.getStatus().equalsIgnoreCase(WorkRequestStatus.Status.SENT_TO_PHARMACY.getValue())) {
                JOptionPane.showMessageDialog(this,
                    "ERROR: Work request is already processed by doctor", "ERROR", JOptionPane.ERROR_MESSAGE);
                return;
            }
            selectedPatient = selectedPTWR.getPatient();
            encounter = selectedPTWR.getEncounter();
            ArrayList<Encounter> encounters = selectedPatient.getEncounterHistory().getEncounters();
            if (encounters.size() > 0) {

                txtPatientId.setText(String.valueOf(selectedPatient.getId()));
                txtPulserate.setText(String.valueOf(encounter.getVitalSigns().getHeartRate()));
                txtBloodPressure.setText(String.valueOf(encounter.getVitalSigns().getBloodPressure()));
                txtTemperature.setText(String.valueOf(encounter.getVitalSigns().getTemperature()));
                txtSymptoms.setText(selectedPTWR.getSymptomps());
                txtAllergies.setText(selectedPTWR.getAllergies());
            } else {
                String patientIdStr = String.valueOf(selectedPatient.getId());
                String pulseRateStr = txtPulserate.getText();
                String tempStr = txtTemperature.getText();
                String symptoms = txtSymptoms.getText();
                String allergies = txtAllergies.getText();


                int existingPatientId = Integer.parseInt(patientIdStr);
                int pulseRate = Integer.parseInt(pulseRateStr);
                int temp = Integer.parseInt(tempStr);
                int bloodPressure = Integer.parseInt(txtBloodPressure.getText());

                VitalSigns newVitalSigns = new VitalSigns(pulseRate, temp, bloodPressure);
                newVitalSigns.setEncounter(encounter);
                Encounter encounter = new Encounter(LocalDate.now(), newVitalSigns);
                selectedPatient.getEncounterHistory().getEncounters().add(encounter);
            }

        }
    }//GEN-LAST:event_btnAcceptPatientActionPerformed

    private void btnSendEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendEmailActionPerformed
        // TODO add your handling code here:
        SendEmail newSendEmail = new SendEmail(selectedPatient.getEmailId(),
                "Your Prescription", txtAreaPres.getText());
        JOptionPane.showMessageDialog(this, "Email Sent Successfully");
        
    }//GEN-LAST:event_btnSendEmailActionPerformed

    private void txtPatientIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientIdActionPerformed

    private void txtAreaaddPrescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAreaaddPrescriptionActionPerformed
        // TODO add your handling code here:

        txtAreaPres.setText("");
        txtAreaPres.append("**Prescription**" + ""
                + "\n\n==================================="
                + "\n\nPatient Id:  " + String.valueOf(txtPatientId.getText())
                + "\n\nMedicines:  " + String.valueOf(txtMedications.getText())
                + "\n\nAllergies:  " + String.valueOf(txtAllergies.getText())
                + "\n\nSymptoms:  " + String.valueOf(txtSymptoms.getText())
        );

        int selectedRowIndex = tblDoctorWorkQueue.getSelectedRow();

        DefaultTableModel tableModel = (DefaultTableModel) tblDoctorWorkQueue.getModel();

        selectedPTWR = (PatientTreatmentWorkRequest) tableModel.getValueAt(selectedRowIndex, 0);

        selectedPTWR.setMedications(txtMedications.getText());
        selectedPTWR.setSymptomps(txtSymptoms.getText());

        selectedPTWR.setStatus(WorkRequestStatus.Status.TREATMENT_COMPLETE.getValue());
        populateDoctorWorkQueue(account, ecosystem);
        showFields();

    }//GEN-LAST:event_txtAreaaddPrescriptionActionPerformed

    private void jBtnSendPharmacyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSendPharmacyActionPerformed
        // TODO add your handling code here:
        
        for (Network network : ecosystem.getRootNetwork().getSubNetworkDirectory().getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise instanceof PharmacyEnterprise) {
                    for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                        if (org.getOrganizationType().equalsIgnoreCase(Organization.Type.PHARMACY.getValue())) {
                            PrescriptionWorkRequest pswr = new PrescriptionWorkRequest(this.account, null, "", selectedPatient);
                            Prescription pr = pswr.getPrescription();
                            pr.setDocRefNo(account.getPerson().getId());
                            pr.setPatientId(Integer.parseInt(txtPatientId.getText()));
                            pr.setMedicinePrescribed(txtMedications.getText());
                            pr.setHospitalId(doctorEnterprise.getEnterpriseId());
                            pswr.setEncounter(encounter);
                            pswr.getEncounter().setHospitalAmount(new Random().nextInt(100000));
                            pr.setPolicyNumber(selectedPatient.getInsuranceNumber());
                            org.getWorkQueue().getWorkrequest().add(pswr);
                            JOptionPane.showMessageDialog(this, "Request successfully sent to :" + org.getName(), " SUCCESS ", JOptionPane.INFORMATION_MESSAGE);
                            selectedPTWR.setStatus(WorkRequestStatus.Status.SENT_TO_PHARMACY.getValue());
                            populateDoctorWorkQueue(account, ecosystem);
                            return;
                        }
                    }

                }
            }
        }
    }//GEN-LAST:event_jBtnSendPharmacyActionPerformed

    private void jBtnSendInsuranceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSendInsuranceActionPerformed
        // TODO add your handling code here:
        
        for (Network network : ecosystem.getRootNetwork().getSubNetworkDirectory().getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise instanceof InsuranceEnterprise) {
                    InsuranceClaimWorkRequest icwr = new InsuranceClaimWorkRequest(this.account, null, "", selectedPatient);
                    Prescription pr = icwr.getPrescription();
                    pr.setDocRefNo(account.getPerson().getId());
                    pr.setPatientId(selectedPatient.getId());
                    pr.setMedicinePrescribed(txtAreaPres.getText());
                    pr.setHospitalId(doctorEnterprise.getEnterpriseId());
                    pr.setPolicyNumber(selectedPatient.getInsuranceNumber());
                    icwr.setEncounter(encounter);
                    icwr.getEncounter().setHospitalAmount(new Random().nextInt(100000));
                    for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                        if (org.getOrganizationType().equalsIgnoreCase(Organization.Type.INSURANCE.getValue())) {
                            org.getWorkQueue().getWorkrequest().add(icwr);
                            JOptionPane.showMessageDialog(this, "Request successfully sent to :" + org.getName(), " SUCCESS ", JOptionPane.INFORMATION_MESSAGE);
                            selectedPTWR.setStatus(WorkRequestStatus.Status.SENT_TO_INSURANCE.getValue());
                            populateDoctorWorkQueue(account, ecosystem);
                            return;
                        }
                    }

                }
            }
        }
    }//GEN-LAST:event_jBtnSendInsuranceActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAcceptPatient;
    private javax.swing.JButton btnSendEmail;
    private javax.swing.JButton jBtnSendInsurance;
    private javax.swing.JButton jBtnSendPharmacy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblPatientId;
    private javax.swing.JLabel lblPulseRate;
    private javax.swing.JLabel lblSymptoms;
    private javax.swing.JLabel lblSymptoms1;
    private javax.swing.JLabel lblTemperature;
    private javax.swing.JLabel lblTemperature1;
    private javax.swing.JTable tblDoctorWorkQueue;
    private javax.swing.JTextArea txtAllergies;
    private javax.swing.JTextArea txtAreaPres;
    private javax.swing.JButton txtAreaaddPrescription;
    private javax.swing.JTextField txtBloodPressure;
    private javax.swing.JTextArea txtMedications;
    private javax.swing.JTextField txtPatientId;
    private javax.swing.JTextField txtPulserate;
    private javax.swing.JTextArea txtSymptoms;
    private javax.swing.JTextField txtTemperature;
    // End of variables declaration//GEN-END:variables
}
