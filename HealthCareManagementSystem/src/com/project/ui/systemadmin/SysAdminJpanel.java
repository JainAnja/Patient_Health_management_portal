/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.project.ui.systemadmin;

import com.project.bloodbank.BloodBankEnterprise;
import com.project.ecosystem.Ecosystem;
import com.project.employee.Employee;
import com.project.network.Network;
import com.project.enterprise.Enterprise;
import com.project.enterprise.Enterprise.EnterpriseType;
import com.project.healthcare.HospitalSystemEnterprise;
import com.project.insurance.InsuranceEnterprise;
import com.project.network.Network.NetworkType;
import com.project.organization.Organization;
import com.project.role.EnterpriseAdminRole;
import com.project.role.InsuranceClaimsManagerRole;
import com.project.role.Pharmacist;
import com.project.role.Role;
import com.project.useraccount.UserAccount;
import com.project.utils.Validation;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import java.util.Date;

/**
 *
 * @author Anjali
 */
public class SysAdminJpanel extends javax.swing.JPanel {

    /**
     * Creates new form SysAdminJpanel
     */
    private JPanel containerPanel;
    private Ecosystem ecosystem;
    private UserAccount userAccount;
    private Enterprise selectedEnterprise = null;

    public SysAdminJpanel(JPanel containerPanel, UserAccount userAccount, Ecosystem business) {
        initComponents();
        this.containerPanel = containerPanel;
        this.ecosystem = business;
        this.userAccount = userAccount;
        populateTree();
        populateEnterpriseTypeComboBox();

    }

    public void populateEnterpriseTypeComboBox() {
        for (Enterprise.EnterpriseType type : Enterprise.EnterpriseType.values()) {
            jComboEnterpriseType.addItem(type.getValue());
        }
    }

    private void populateTree() {

        DefaultTreeModel model = (DefaultTreeModel) systemTree.getModel();
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        root.removeAllChildren();

        Network country;
        Network state;

        ArrayList<Enterprise> enterpriseList;
        ArrayList<Organization> organizationList;

        Network rootNetwork;
        Enterprise enterprise;
        Organization organization;

        DefaultMutableTreeNode rootNetworkNode;
        DefaultMutableTreeNode countryNode;
        DefaultMutableTreeNode stateNode;

        rootNetwork = ecosystem.getRootNetwork();

        DefaultMutableTreeNode enterpriseNode;
        DefaultMutableTreeNode organizationNode;

        for (int i = 0; i < rootNetwork.getSubNetworkDirectory().getNetworkList().size(); i++) {
            country = rootNetwork.getSubNetworkDirectory().getNetworkList().get(i);
            countryNode = new DefaultMutableTreeNode(country.getName());
            root.insert(countryNode, i);

            for (int j = 0; j < country.getSubNetworkDirectory().getNetworkList().size(); j++) {
                state = country.getSubNetworkDirectory().getNetworkList().get(j);
                stateNode = new DefaultMutableTreeNode(state.getName());
                countryNode.insert(stateNode, j);
            }

        }

        model.reload();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane3 = new javax.swing.JLayeredPane();
        jLayerAddAdmin = new javax.swing.JLayeredPane();
        txtAdminname = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblEntManageAdmin = new javax.swing.JTable();
        lblAdminEnterpriseMag = new javax.swing.JLabel();
        txtAdminEmailAdd = new javax.swing.JTextField();
        btnAddEnteAdmin = new javax.swing.JButton();
        btnDisableAdmin = new javax.swing.JButton();
        jLayerAddEnterprise = new javax.swing.JLayeredPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblEntManage = new javax.swing.JTable();
        jComboEnterpriseType = new javax.swing.JComboBox<>();
        txtEnterEnterprisename = new javax.swing.JTextField();
        btnAddEnteprsie = new javax.swing.JButton();
        btnManageEnterprise = new javax.swing.JButton();
        jLayerPaneAddNetwork = new javax.swing.JLayeredPane();
        txtAddNework = new javax.swing.JTextField();
        btnAddnetwork = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        systemTree = new javax.swing.JTree();

        setPreferredSize(new java.awt.Dimension(1050, 800));

        jLayeredPane3.setBackground(new java.awt.Color(211, 208, 203));
        jLayeredPane3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(174, 14, 54), 2));
        jLayeredPane3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLayerAddAdmin.setBackground(new java.awt.Color(174, 14, 54));
        jLayerAddAdmin.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Manage Enterprise Admin", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 12), new java.awt.Color(174, 14, 54))); // NOI18N

        txtAdminname.setText("Enter name:");
        txtAdminname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAdminnameFocusGained(evt);
            }
        });
        txtAdminname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAdminnameActionPerformed(evt);
            }
        });

        tblEntManageAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Admin Name", "Email Address", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblEntManageAdmin);
        if (tblEntManageAdmin.getColumnModel().getColumnCount() > 0) {
            tblEntManageAdmin.getColumnModel().getColumn(0).setResizable(false);
            tblEntManageAdmin.getColumnModel().getColumn(1).setResizable(false);
            tblEntManageAdmin.getColumnModel().getColumn(2).setResizable(false);
        }

        txtAdminEmailAdd.setText("Enter email id:");
        txtAdminEmailAdd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAdminEmailAddFocusGained(evt);
            }
        });

        btnAddEnteAdmin.setBackground(new java.awt.Color(174, 14, 54));
        btnAddEnteAdmin.setForeground(new java.awt.Color(255, 255, 255));
        btnAddEnteAdmin.setText("Add New Admin");
        btnAddEnteAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEnteAdminActionPerformed(evt);
            }
        });

        btnDisableAdmin.setBackground(new java.awt.Color(174, 14, 54));
        btnDisableAdmin.setForeground(new java.awt.Color(255, 255, 255));
        btnDisableAdmin.setText("Disable admin");
        btnDisableAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisableAdminActionPerformed(evt);
            }
        });

        jLayerAddAdmin.setLayer(txtAdminname, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayerAddAdmin.setLayer(jScrollPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayerAddAdmin.setLayer(lblAdminEnterpriseMag, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayerAddAdmin.setLayer(txtAdminEmailAdd, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayerAddAdmin.setLayer(btnAddEnteAdmin, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayerAddAdmin.setLayer(btnDisableAdmin, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayerAddAdminLayout = new javax.swing.GroupLayout(jLayerAddAdmin);
        jLayerAddAdmin.setLayout(jLayerAddAdminLayout);
        jLayerAddAdminLayout.setHorizontalGroup(
            jLayerAddAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayerAddAdminLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayerAddAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayerAddAdminLayout.createSequentialGroup()
                        .addComponent(btnAddEnteAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDisableAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayerAddAdminLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jLayerAddAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayerAddAdminLayout.createSequentialGroup()
                                .addComponent(txtAdminname, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtAdminEmailAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblAdminEnterpriseMag, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jLayerAddAdminLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(9, 9, 9))
        );
        jLayerAddAdminLayout.setVerticalGroup(
            jLayerAddAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayerAddAdminLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAdminEnterpriseMag)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayerAddAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAdminname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAdminEmailAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jLayerAddAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddEnteAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDisableAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(114, Short.MAX_VALUE))
        );

        jLayeredPane3.add(jLayerAddAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 210, 340, 310));

        jLayerAddEnterprise.setBackground(new java.awt.Color(174, 14, 54));
        jLayerAddEnterprise.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Manage Enterprise", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 12), new java.awt.Color(174, 14, 54))); // NOI18N

        tblEntManage.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Enterprise Name", "Enterprise Type", "Enterprise ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblEntManage);
        if (tblEntManage.getColumnModel().getColumnCount() > 0) {
            tblEntManage.getColumnModel().getColumn(0).setResizable(false);
            tblEntManage.getColumnModel().getColumn(1).setResizable(false);
            tblEntManage.getColumnModel().getColumn(2).setResizable(false);
        }

        jComboEnterpriseType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboEnterpriseTypeActionPerformed(evt);
            }
        });

        txtEnterEnterprisename.setText("Enter enterprise name:");
        txtEnterEnterprisename.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEnterEnterprisenameFocusGained(evt);
            }
        });
        txtEnterEnterprisename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEnterEnterprisenameActionPerformed(evt);
            }
        });

        btnAddEnteprsie.setBackground(new java.awt.Color(174, 14, 54));
        btnAddEnteprsie.setForeground(new java.awt.Color(255, 255, 255));
        btnAddEnteprsie.setText("Add enterprise");
        btnAddEnteprsie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEnteprsieActionPerformed(evt);
            }
        });

        btnManageEnterprise.setBackground(new java.awt.Color(174, 14, 54));
        btnManageEnterprise.setForeground(new java.awt.Color(255, 255, 255));
        btnManageEnterprise.setText("Manage Enterprise");
        btnManageEnterprise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageEnterpriseActionPerformed(evt);
            }
        });

        jLayerAddEnterprise.setLayer(jScrollPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayerAddEnterprise.setLayer(jComboEnterpriseType, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayerAddEnterprise.setLayer(txtEnterEnterprisename, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayerAddEnterprise.setLayer(btnAddEnteprsie, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayerAddEnterprise.setLayer(btnManageEnterprise, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayerAddEnterpriseLayout = new javax.swing.GroupLayout(jLayerAddEnterprise);
        jLayerAddEnterprise.setLayout(jLayerAddEnterpriseLayout);
        jLayerAddEnterpriseLayout.setHorizontalGroup(
            jLayerAddEnterpriseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayerAddEnterpriseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayerAddEnterpriseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboEnterpriseType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtEnterEnterprisename)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayerAddEnterpriseLayout.createSequentialGroup()
                        .addComponent(btnAddEnteprsie, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addComponent(btnManageEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayerAddEnterpriseLayout.setVerticalGroup(
            jLayerAddEnterpriseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayerAddEnterpriseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtEnterEnterprisename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboEnterpriseType, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jLayerAddEnterpriseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddEnteprsie)
                    .addComponent(btnManageEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        jLayerAddEnterpriseLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAddEnteprsie, btnManageEnterprise});

        jLayeredPane3.add(jLayerAddEnterprise, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, 340, 310));

        jLayerPaneAddNetwork.setBackground(new java.awt.Color(174, 14, 54));
        jLayerPaneAddNetwork.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add Network", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 12), new java.awt.Color(174, 14, 54))); // NOI18N
        jLayerPaneAddNetwork.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtAddNework.setText("Enter network name:");
        txtAddNework.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAddNeworkFocusGained(evt);
            }
        });
        txtAddNework.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddNeworkActionPerformed(evt);
            }
        });
        jLayerPaneAddNetwork.add(txtAddNework, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 200, 40));

        btnAddnetwork.setText("Add Network");
        btnAddnetwork.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddnetworkActionPerformed(evt);
            }
        });
        jLayerPaneAddNetwork.add(btnAddnetwork, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 110, -1));

        jLayeredPane3.add(jLayerPaneAddNetwork, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 340, 120));

        systemTree.setBackground(new java.awt.Color(252, 246, 245));
        systemTree.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(174, 14, 54), 2), "Network", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 12), new java.awt.Color(174, 14, 54))); // NOI18N
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Network");
        systemTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        systemTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                systemTreeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(systemTree);

        jLayeredPane3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 48, 130, 450));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(jLayeredPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 916, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(129, Short.MAX_VALUE)
                .addComponent(jLayeredPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(129, 129, 129))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddnetworkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddnetworkActionPerformed
        // TODO add your handling code here:
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) systemTree.getLastSelectedPathComponent();
        System.out.println(node);
        if (node != null) {
            if (Validation.validateTextFieldsForNonEmpty(txtAddNework)) {
                if (Validation.validateTextFieldsForString(txtAddNework)) {
                    if (node.getLevel() == 0) {
                        ecosystem.getRootNetwork().getSubNetworkDirectory().createAndAddNetwork(txtAddNework.getText(), NetworkType.COUNTRY.getValue());
                        JOptionPane.showMessageDialog(null, "The country " + txtAddNework.getText().trim() + " is added successfully.");
                        txtAddNework.setText("");

                    } else if (node.getLevel() == 1) {
                        Network countryNetwork = ecosystem.getRootNetwork().findCountryNetwork(node.toString());

                        if (countryNetwork != null) {
                            if (!countryNetwork.getSubNetworkDirectory().isPresent(txtAddNework.getText().trim())) {
                                countryNetwork.getSubNetworkDirectory().createAndAddNetwork(txtAddNework.getText().trim(), NetworkType.STATE.getValue());
                                JOptionPane.showMessageDialog(null, "The state " + txtAddNework.getText().toUpperCase() + " is added successfully to the " + node.toString() + "country", node.toString() + "-->" + txtAddNework.getText().toUpperCase(), JOptionPane.INFORMATION_MESSAGE);
                                txtAddNework.setText("");
                            } else {

                                JOptionPane.showMessageDialog(null, "State with same name is already present in this country ", "Invaid Input", JOptionPane.ERROR_MESSAGE);
                                return;
                            }
                        }
                    }

                    populateTree();

                } else {
                    JOptionPane.showMessageDialog(null, "Please enter valid input", "Invalid input", JOptionPane.ERROR_MESSAGE);
                    return;
                }

            } else {
                JOptionPane.showMessageDialog(null, "Please enter network name", "Blank input", JOptionPane.ERROR_MESSAGE);
                return;
            }

        }

    }//GEN-LAST:event_btnAddnetworkActionPerformed

    private void btnAddEnteprsieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEnteprsieActionPerformed
        // TODO add your handling code here:
        String errorMsg = "";
        boolean errorFlag = false;
        boolean createFlag = true;

        Enterprise addedEnterprise = null;
        int selectedRow = tblEntManage.getSelectedRow();

        if (!Validation.validateTextFieldsForString(txtEnterEnterprisename)) {
            errorFlag = true;
            errorMsg += "Please enter enterprise name";
        }

        if (!errorFlag) {

            DefaultMutableTreeNode node = (DefaultMutableTreeNode) systemTree.getLastSelectedPathComponent();
            String selectedType = (String) jComboEnterpriseType.getSelectedItem();
            EnterpriseType selectedEnterpriseType = EnterpriseType.fromString(selectedType);

            if (node != null) {
                if (checkUniqueEnterprise(txtEnterEnterprisename.getText().trim())) {

                    if (node.getLevel() == 0) {

                        Network rootNetwork = ecosystem.getRootNetwork();

                        for (Enterprise rootEnterprise : rootNetwork.getEnterpriseDirectory().getEnterpriseList()) {
                            if (rootEnterprise != null) {
                                createFlag = false;
                            }
                        }

                        if (createFlag) {
                            addedEnterprise = rootNetwork.getEnterpriseDirectory().addNewEnterprise(txtEnterEnterprisename.getText(), selectedEnterpriseType);
                        } else {
                            JOptionPane.showMessageDialog(null, "There can be only one hospital enterprise at global level", "Creation denied", JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                        populateEnterpriseTable(rootNetwork);
                    }
                    if (node.getLevel() == 1) {

                        Network countryNetwork = ecosystem.getRootNetwork().findCountryNetwork(node.toString());
                        addedEnterprise = countryNetwork.getEnterpriseDirectory().addNewEnterprise(txtEnterEnterprisename.getText(), selectedEnterpriseType);
                        populateEnterpriseTable(countryNetwork);
                    } else if (node.getLevel() == 2) {

                        Network stateNetwork = ecosystem.getRootNetwork().findStateNetwork(node.getParent().toString(), node.toString());
                        addedEnterprise = stateNetwork.getEnterpriseDirectory().addNewEnterprise(txtEnterEnterprisename.getText(), selectedEnterpriseType);
                        populateEnterpriseTable(stateNetwork);
                    }


                } else {
                    JOptionPane.showMessageDialog(null, "Enterprise with name " + txtEnterEnterprisename.getText() + " is already present in the system.", "Duplicate entry", JOptionPane.ERROR_MESSAGE);
                    return;
                }

            } else {
                errorMsg = "\n Please select network to configure";
                errorFlag = true;
            }

        } else {
            JOptionPane.showMessageDialog(null, "Please correct all errors and then submit: " + errorMsg, "Invalid input", JOptionPane.ERROR_MESSAGE);
        }
    }

    public boolean checkUniqueEnterprise(String name) {
        for (Network network : ecosystem.getRootNetwork().getSubNetworkDirectory().getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise.getEnterpriseName().equalsIgnoreCase(name)) {
                    return false;
                }
            }
        }

        return true;

    }//GEN-LAST:event_btnAddEnteprsieActionPerformed

    private void txtAddNeworkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddNeworkActionPerformed
        // TODO add your handling code here:

        txtAddNework.setText("");
    }//GEN-LAST:event_txtAddNeworkActionPerformed

    private void systemTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_systemTreeValueChanged
        // TODO add your handling code here:
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) systemTree.getLastSelectedPathComponent();
        if (node != null) {
            jLayerPaneAddNetwork.setVisible(true);
            jLayerAddEnterprise.setVisible(true);
//            lblAddNetwork.setVisible(true);
            jLayerAddAdmin.setVisible(false);

            int level = node.getLevel();

            if (level == 0) {

                btnAddnetwork.setText("Add Country ");
                Network rootNetwork = ecosystem.getRootNetwork();
                System.out.println("Root network" + rootNetwork);
                btnAddEnteprsie.setText("Add Enterprise to:" + rootNetwork.getName());
                populateEnterpriseTable(rootNetwork);
                // deleteNetwork_Jbutton.setText("Delete country ");
            } else if (level == 1) {

                btnAddnetwork.setText("Add State");
                Network countryNetwork = ecosystem.getRootNetwork().findCountryNetwork(node.toString());
                btnAddEnteprsie.setText("Add Enterprise to:" + countryNetwork.getName());
                populateEnterpriseTable(countryNetwork);
                //deleteNetwork_Jbutton.setText("Delete State ");
            } else if (level == 2) {
                jLayerPaneAddNetwork.setVisible(true);

                btnAddnetwork.setText("Add City");

                Network stateNetwork = ecosystem.getRootNetwork().findStateNetwork(node.getParent().toString(), node.toString());
                btnAddEnteprsie.setText("Add Enterprise to:" + stateNetwork.getName());
                populateEnterpriseTable(stateNetwork);
            }

        }
    }

    public void populateEnterpriseTable(Network network) {
        DefaultTableModel dtm = (DefaultTableModel) tblEntManage.getModel();
        dtm.setRowCount(0);

        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            Object row[] = new Object[3];
            row[0] = enterprise.getEnterpriseId();
            row[1] = enterprise;
            row[2] = enterprise.getEnterpriseType().getValue();
            dtm.addRow(row);

            btnManageEnterprise.setVisible(true);

        }

    }//GEN-LAST:event_systemTreeValueChanged

    private void txtEnterEnterprisenameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEnterEnterprisenameFocusGained
        // TODO add your handling code here:

        if (txtEnterEnterprisename.getText().equalsIgnoreCase("Enter enterprise name:")) {
            txtEnterEnterprisename.setText("");
        }
    }//GEN-LAST:event_txtEnterEnterprisenameFocusGained

    private void txtEnterEnterprisenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEnterEnterprisenameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEnterEnterprisenameActionPerformed

    private void txtAddNeworkFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAddNeworkFocusGained
        // TODO add your handling code here:

        if (txtAddNework.getText().equalsIgnoreCase("Enter network name:")) {
            txtAddNework.setText("");
        }
    }//GEN-LAST:event_txtAddNeworkFocusGained

    public void populateEnterpriseAdminTable(Enterprise enterprise) {
        DefaultTableModel dtm = (DefaultTableModel) tblEntManageAdmin.getModel();
        dtm.setRowCount(0);

        for (UserAccount ua : enterprise.getUserAccountDirectory().getUserAccountList()) {
                Object row[] = new Object[3];
                row[0] = ua;
                row[1] = ua.getPerson().getEmailId();
                row[2] = ua.isIsActive() ? "Active" : "Disabled";
                dtm.addRow(row);
        }
    }

    private void btnManageEnterpriseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageEnterpriseActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblEntManage.getSelectedRow();

        if (selectedRow >= 0) {
            jLayerAddAdmin.setVisible(true);
            selectedEnterprise = (Enterprise) tblEntManage.getValueAt(selectedRow, 1);
            System.out.println("abc" + selectedEnterprise);
            String enterpriseLabel = String.valueOf(tblEntManage.getValueAt(selectedRow, 1));
            lblAdminEnterpriseMag.setText(enterpriseLabel);
            populateEnterpriseAdminTable(selectedEnterprise);

        } else {
            JOptionPane.showMessageDialog(null, "Please select enterprise from the table to create admin", "No Selection", JOptionPane.ERROR_MESSAGE);
            return;
        }

    }//GEN-LAST:event_btnManageEnterpriseActionPerformed

    private void btnDisableAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisableAdminActionPerformed
        // TODO add your handling code here:

        int selectedRow = tblEntManageAdmin.getSelectedRow();

        int selectedEnt = tblEntManageAdmin.getSelectedRow();
        selectedEnterprise = (Enterprise)tblEntManage.getValueAt(selectedEnt,1);

        if (selectedRow>=0)
        {
            UserAccount ua = (UserAccount)tblEntManageAdmin.getValueAt(selectedRow,0);
            ua.setIsActive(false);
            populateEnterpriseAdminTable(selectedEnterprise);
        }

    }//GEN-LAST:event_btnDisableAdminActionPerformed

    private void btnAddEnteAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEnteAdminActionPerformed
        // TODO add your handling code here:

        String errorMsg = "";
        boolean errorFlag = false;

        int selectedRow = tblEntManage.getSelectedRow();
        selectedEnterprise = (Enterprise) tblEntManage.getValueAt(selectedRow, 1);

        if (!Validation.validateTextFieldsForString(txtAdminname)) {
            errorFlag = true;
            errorMsg += "Please enter admin name \n";
        }

        if (!Validation.validateTextFieldsForEmailId(txtAdminEmailAdd)) {
            errorFlag = true;
            errorMsg += "Please enter valid email address \n";

        }

        if (!errorFlag) {

            if (!ecosystem.checkUserNamePresent(txtAdminname.getText().trim())) {
                Enterprise.EnterpriseType selectedEnterpriseType = selectedEnterprise.getEnterpriseType();

                Employee employee = selectedEnterprise.getEmployeeDirectory().addNewEMployee(txtAdminname.getText().trim());
                String employeePassword = randomPassword();

                UserAccount userAccount = null;
                userAccount = selectedEnterprise.getUserAccountDirectory().createUserAccount(txtAdminname.getText().trim(), txtAdminname.getText().trim(), employee, new EnterpriseAdminRole());
                userAccount.getPerson().setEmailId(txtAdminEmailAdd.getText());

                JOptionPane.showMessageDialog(null, "New enterprise admin is created successfully.\n Login credentials will be emailed to you.");
                populateEnterpriseAdminTable(selectedEnterprise);
                txtAdminname.setText("");
                txtAdminEmailAdd.setText("");
            } else {
                JOptionPane.showMessageDialog(null, "User account with email id " + txtAdminname.getText() + " already exists.", "Duplicate entry", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(null, errorMsg, "Missing or Incorrect Details", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnAddEnteAdminActionPerformed

    private void txtAdminEmailAddFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAdminEmailAddFocusGained
        // TODO add your handling code here:
        if (txtAdminEmailAdd.getText().equalsIgnoreCase("Enter email id:")) {
            txtAdminEmailAdd.setText("");
        }
    }//GEN-LAST:event_txtAdminEmailAddFocusGained

    private void txtAdminnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAdminnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdminnameActionPerformed

    private void txtAdminnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAdminnameFocusGained
        // TODO add your handling code here:
        if (txtAdminname.getText().equalsIgnoreCase("Enter name:")) {
            txtAdminname.setText("");
        }
    }//GEN-LAST:event_txtAdminnameFocusGained

    private void jComboEnterpriseTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboEnterpriseTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboEnterpriseTypeActionPerformed

    public String randomPassword() {
        return new Date().toString();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddEnteAdmin;
    private javax.swing.JButton btnAddEnteprsie;
    private javax.swing.JButton btnAddnetwork;
    private javax.swing.JButton btnDisableAdmin;
    private javax.swing.JButton btnManageEnterprise;
    private javax.swing.JComboBox<String> jComboEnterpriseType;
    private javax.swing.JLayeredPane jLayerAddAdmin;
    private javax.swing.JLayeredPane jLayerAddEnterprise;
    private javax.swing.JLayeredPane jLayerPaneAddNetwork;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblAdminEnterpriseMag;
    private javax.swing.JTree systemTree;
    private javax.swing.JTable tblEntManage;
    private javax.swing.JTable tblEntManageAdmin;
    private javax.swing.JTextField txtAddNework;
    private javax.swing.JTextField txtAdminEmailAdd;
    private javax.swing.JTextField txtAdminname;
    private javax.swing.JTextField txtEnterEnterprisename;
    // End of variables declaration//GEN-END:variables
}
